{
  "_from": "mustache-express",
  "_id": "mustache-express@1.2.7",
  "_inBundle": false,
  "_integrity": "sha1-xlYxG1o5kVpQxJAk/SUWOju+huM=",
  "_location": "/mustache-express",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "mustache-express",
    "fetchSpec": "latest",
    "name": "mustache-express",
    "raw": "mustache-express",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mustache-express/-/mustache-express-1.2.7.tgz",
  "_shasum": "c656311b5a39915a50c49024fd25163a3bbe86e3",
  "_spec": "mustache-express",
  "_where": "/home/nectar/Documents/Kora/teamKS",
  "author": {
    "email": "bryan@burgers.io",
    "name": "Bryan Burgers",
    "url": "http://www.burgers.io"
  },
  "bugs": {
    "url": "https://github.com/bryanburgers/node-mustache-express/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Leon van Kammen",
      "email": "info@leon.vankammen.eu"
    },
    {
      "name": "Andrea Mirone",
      "email": "andreamirone@gmail.com"
    },
    {
      "name": "Pasi Rajala",
      "email": "p@prr.fi"
    },
    {
      "name": "Moandji Ezana",
      "email": "mwanji@gmail.com"
    },
    {
      "name": "Mikko Tikkanen",
      "email": "mikko.tikkanen@gmail.com"
    },
    {
      "name": "Umar Hansa",
      "email": "umar.hansa@gmail.com"
    }
  ],
  "dependencies": {
    "async": "~2.6.0",
    "lru-cache": "~4.1.3",
    "mustache": "~2.3.0"
  },
  "deprecated": false,
  "description": "Use mustache, including partials, in Express 3",
  "devDependencies": {
    "grunt": "~1.0.2",
    "grunt-contrib-jshint": "~1.1.0",
    "jshint": "~2.9.5",
    "mocha": "~5.1.1",
    "should": "~13.2.1"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "homepage": "https://github.com/bryanburgers/node-mustache-express#readme",
  "license": "MIT",
  "main": "mustache-express.js",
  "maintainers": [
    {
      "name": "Florencia Herra Vega",
      "email": "florencia.hv@peerio.com",
      "url": "https://www.peerio.com"
    },
    {
      "name": "Samuel Martin Moro",
      "email": "samuel@peerio.com",
      "url": "https://www.peerio.com"
    }
  ],
  "name": "mustache-express",
  "optionalDependencies": {},
  "readme": "# The Mustache Express\n\n[![Build Status](https://travis-ci.org/bryanburgers/node-mustache-express.png)](https://travis-ci.org/bryanburgers/node-mustache-express)\n\nMustache Express lets you use Mustache and Express (at least version 3) together, including auto-loading partials.\n\n## Usage\n\n    var mustacheExpress = require('mustache-express');\n\n    // Register '.mustache' extension with The Mustache Express\n    app.engine('mustache', mustacheExpress());\n\n    app.set('view engine', 'mustache');\n    app.set('views', __dirname + '/views');\n\n## Parameters\n\nThe mustacheExpress method can take two parameters: the directory of the partials and the extension of the partials. When a partial is requested by a template, the file will be loaded from `path.resolve(directory, partialName + extension)`. By default, these values are determined by Express.\n\n## Properties\n\nThe return function has a `cache` parameter that is an [LRU Cache](https://github.com/isaacs/node-lru-cache).\n\n    var engine = mustacheExpress();\n    var cache = engine.cache; // Caches the full file name with some internal data.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/bryanburgers/node-mustache-express.git"
  },
  "scripts": {
    "test": "mocha && jshint"
  },
  "version": "1.2.7"
}
